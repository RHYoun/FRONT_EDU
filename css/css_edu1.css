/* @import url("./box.css"); */

div {
  font-size: 50px;
  color: blue;
  text-decoration: underline;
  margin: 20px;
}
/* 선택차를 찾아서 중괄호 안의 내용이 적용 된다.
선택자-대상{속성-종류: 값;} 
마진의 경우 외부 여백을 뜻한다.

너무 많을경우 해석이 힘들어 지기에 줄바꿈 및 들여쓰기로 작성하게 된다.
*/
/*CSS선택자
1. 기본석택자 
  *{}-전체 선택자로 모든요소 선택. 보통 복합과 같이 사용해 영역 선택을 한다
  tag{} - 태그 선택자로 HTML내 태그의 이름을 통해 요소 선택후 적용
  .클래스{}-특정 클래스(중복가능) 지정 후 해당 클래스만 선택하여 적용
  #아이디{}-고유 아이디(중복불가) 지정 후 해당 아이디만 선택하여 적용
2. 복합 선택자
  일치 선택자 abc.xyz를 동시에 만족하는 요소 선택
    ex> span.orange{} tag+클래스 동시만족 요소 선택. 
  자식 선택자 : abc의 자식요소 xyz선택
    ex> ul>.orange{} ul 태그의 자식1촌 요소 중 class이름이 orange인 요소 선택
  하위 선택자 : abc의 하위전무 요소 xyz 선택 띄어쓰기가 들어가므로 주의 할 것
    ex> div .orange{} div의 하위요소 중 orange요소 선택
  인접 형제 선택자 : 선택자 abc의 형제요소 중 xyz 하나를 선택
    ex> .oragne + li{} 오랜지 태그 찾은 후 동일 형제요소 아이템 리스트 중 이후 항목 하나 선택 
  일반 형제 선택자 : 형제 선택자 중 전무 선택
    ex> .oragne ~ li{} 오랜지 태그 찾은 후 동일 형제요소 아이템 리스트 중 이후 항목 전부 선택 
  */
.box {
  width: 300px;
  height: 100px;
  background-color: red;
  transition: 1s;
}
.box:hover {
  width: 800px;
  background-color: royalblue;
}
.box:active {
  width: 300px;
  background-color: black;
}
.box:focus {
  background-color: orange;
}
input:focus {
  background-color: orange;
}
/*
3. 가상 클래스
:hover : 마우스커서가 올라가 있는 동안만 선택
  ex> tag:hover{} 마우스를 올리면 중괄호 안에 내용이 적용
:active : 마우스를 클릭하고 있는 동안 선택
  ex> tag:active{} 마우스 클릭하고 유지하면 적용 
:focus : 어떤 요소가 포거스가 되면 선택 - 포커스는 인풋,셀렉트, 텍스트 뭐시기 등 요소들이다.
        포커스 불가능 요소를 포커스 가능하게 할려면 tabindex="-1" 기입 필요
:first-child : 선택자가 있고 그 형제요소가 있는데 그 중 첫째 요소 선택  
:last-child : 선택자가 있고 그 형제요소가 있는데 그 중 마지막 선택  
:nth-child(번쨰) : 선택자가 있고 그 형제요소가 있는데 그 중 몇번째 선택
:not(선택자) : 부정선택자로 선택자가 아닌요소들만 석택
*/
.fruits span:first-child {
  color: red;
}
.fruits h3:last-child {
  color: green;
}
.fruits *:nth-child(2n) {
  color: orange;
}
.fruits *:not(span) {
  background-color: black;
}
/* 4. 가상요소 선택자
::before :선택자 abc요소의 내부 앞에 인라인 내용을 삽입 content와 같이 붙어다님
  ex> .box::before{content:"앞!";}
::after :선택자 abc요소의 내부 뒤에 인라인 내용을 삽입 content와 같이 붙어다님
  ex> .box::before{content:"뒤!";}
*/
.box::before {
  content: "앞!";
}
.box::after {
  content: "";
  display: block;
  /* 디스플레이 없이는 content내용이 없다면 인라인이라 최소 크기 지정이기에 바뀌는게 없음 */
  width: 30px;
  height: 30px;
  background-color: royalblue;
}
